server:
  port: 8080
  servlet:
  # chemain de base de toute l'interface spring/ permet de planquer le servlet drrière un site internet '
    context-path: "/"


spring:
  #liquibase:
    #change-log: classpath:db/changelog/changelog.sql
  application:
    name: "Gestion des taches"
    # base de donnée à laquele l'API se connecte
  datasource:
    name: task
    url: jdbc:mariadb://localhost:3307/gestiondestaches
    username: root
    password: "1111"
    dbcp2:
      driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    hibernate:
    # permet de gérer la manière dont le programme vas se comproter sur la base de données
    # create -> il vas suprimer toutes les tables existantes et mettre les siennes, idéal pour tester la modélisation JPA
    # update -> il n'ajouteras que les table/colomne non existante, et ne toucheras pas à vos précieuses données
    # validate -> ne modifieras pas la forme de la base de donnée, ajoutera et supprimera des entrées 
    # c'est le mode généralement utilisé en production
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        #dialect: org.hibernate.dialect.MariaDBDialects

